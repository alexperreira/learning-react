{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderperreira/projects/REACT/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Expenses, \"Mc+NeR06clC/ISYiaZXb0Ie4vks=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/alexanderperreira/projects/REACT/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC7CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACA,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACxD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACA,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAChCD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACtC,QAAC,WAAD;AAEC,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFhB;AAGC,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHjB;AAIC,MAAA,IAAI,EAAER,OAAO,CAACC;AAJf,OACMD,OAAO,CAACS,EADd;AAAA;AAAA;AAAA;AAAA,YADiB,CAAlB;AAQA;;AAED,sBACC,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACC,QAAC,cAAD;AACC,MAAA,QAAQ,EAAEhB,YADX;AAEC,MAAA,cAAc,EAAEE;AAFjB;AAAA;AAAA;AAAA;AAAA,YADD,EAKES,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAjCD;;GAAMb,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\n\nconst Expenses = (props) => {\n\tconst [filteredYear, setFilteredYear] = useState('2021');\n\n\tconst filterChangeHandler = (selectedYear) => {\n\t\tsetFilteredYear(selectedYear);\n\t};\n\n\tconst filteredExpenses = props.items.filter((expense) => {\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\n\t});\n\n\tlet expensesContent = <p>No expenses found.</p>;\n\n\tif (filteredExpenses.length > 0) {\n\t\texpensesContent = filteredExpenses.map((expense) => (\n\t\t\t<ExpenseItem\n\t\t\t\tkey={expense.id}\n\t\t\t\ttitle={expense.title}\n\t\t\t\tamount={expense.amount}\n\t\t\t\tdate={expense.date}\n\t\t\t/>\n\t\t));\n\t}\n\n\treturn (\n\t\t<Card className='expenses'>\n\t\t\t<ExpensesFilter\n\t\t\t\tselected={filteredYear}\n\t\t\t\tonChangeFilter={filterChangeHandler}\n\t\t\t/>\n\t\t\t{expensesContent}\n\t\t</Card>\n\t);\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}